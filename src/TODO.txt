""" This file keeps the outstanding changes and thoughts we have about paxi. """

*** THINGS TO LOOK INTO ***
- there are lots of results returned in pvalues
- ballot numbers seem to have gaps in them
- should "nexttodecide" be reset to 1 when a node stops being a leader?

*** CHANGES TO THE CODE ***
- if a client re-sends a request, re-return the same old response
- do not let the commands get past the edge of the window
- configuration change meta-events
- keep leader active, skip over the prepare phase
- save state to disk
- weak leader election with adaptive timeouts
- failure monitoring and local failure detection
- automatically take non-responsive peers out of the configuration
- garbage collect commands that all replicas have seen
- new replica should inherit state from a live replica

*** TO THINK ABOUT ***
- How should the Leader and Replica states be updated so commandnumber
  allocation is done appropriately.
- How to make Leader not reissue all previous commands
    -- Leader can have the state that Replica has (especially if the
    Leader extends a Replica) and not reissue command in the Executed
    (maybe even Decided) state.
    -- Leader can receive periodic "state of the system" messages from
    Replicas
- How will Leader Failure be handled.
- How will the weak Leader election be done.

*** DONE ***
- execute meta commands when the window has passed
- automatic leader promotion
- client should time out if a request takes too long
- client commands get numbered by the leader
- client loop cleaned up, performs re-sends correctly, matches responses
- node does not deal with short reads
- commands are kept in (COMMANDSTATE,COMMAND) tuples
Leader & Acceptor	 : The replies for PREPARE and PROPOSE should
       	 		       	   have different names:
			       	       - MSG_PREPARE_ADOPTED
				       - MSG_PREPARE_PREEMPTED
				       - MSG_PROPOSE_ACCEPT
				       - MSG_PROPOSE_REJECT

Replica			 : 'requests' keeps
			           <commandnumber:(commandstate,command/result)> mappings
			  	   'commandstate' can be Executed,Decided,Running,None
				   		  - Executed: The command corresponding to the
			           		    	      	     commandnumber has been both decided
			                                             and executed.
						  - Decided: The command corresponding to the commandnumber
						    	     	     has been decided but it is not executed
			           				     yet (probably due to an outstanding
			           				     command prior to this command.)
						  - Running: The commandnumber is assigned to a command but the 
						    	     	     result is not known yet.
						  - None: The commandnumber has not been assigned to any command.
			  	   'nexttodecide' keeps the commandnumber that should be used for the next proposal
				   'nexttoexecute' keeps the commandnumber that has been executed

ResponseCollector    : 'received' keeps <peer:reply> mappings
		      	       	  upon receiving a reply the Response Collector adds it to 'received'
				  if a reply is coming for the second time it overwrites the old one
				  the length of 'received' determines if quorum is reached or not

Leader			  : 'proposals' keeps <commandnumber:proposal> mappings with the 
			  	   highest ballotnumber
				   Leader updates proposals by pMax(possiblepvalueset)
				   Leader goes over all proposals in this dictionary and sends a PROPOSE for each

Message			 : Command class to keep (clientid, clientcommandnumber, command)
			   	   triples. Will be used to prevent
			   	   double assignment of commands

Command		 : Used to keep clientid, clientcommandnumber and command triples, 
		   	   	   for disgarding multiple requests for the same command.
 
Replica                      :  Replica checks for every Command received if it has been executed 
			            before or not. Thus Replica keeps
			            state of commands.
Node		         : As messages may be received multiple times
			            outstandingmessages is indexed by
			            unique messageid's and multiple
			            copies of messages are discarded
			            not to affect state.

Leader		         : As messages may be received multiple times the ResponseCollectors 
                                   keep a list of acceptors that they are waiting a reply from and
                                   multiple replies are discarded for right behavior. 
   
Leader		         : global proposals and xor this with the pmaxset before sending commands 

Replica		    	  : Commands should be carried in a way that
			    	    the last replica/leader that gets
			    	    the command should be able to
			    	    respond to the client.
